

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 21 13:56:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178  0000                     	;# 
   179  0001                     	;# 
   180  0002                     	;# 
   181  0003                     	;# 
   182  0004                     	;# 
   183  0005                     	;# 
   184  0006                     	;# 
   185  0007                     	;# 
   186  0008                     	;# 
   187  0009                     	;# 
   188  000A                     	;# 
   189  000B                     	;# 
   190  000C                     	;# 
   191  000D                     	;# 
   192  000E                     	;# 
   193  000E                     	;# 
   194  000F                     	;# 
   195  0010                     	;# 
   196  0011                     	;# 
   197  0012                     	;# 
   198  0013                     	;# 
   199  0014                     	;# 
   200  0015                     	;# 
   201  0015                     	;# 
   202  0016                     	;# 
   203  0017                     	;# 
   204  0018                     	;# 
   205  0019                     	;# 
   206  001A                     	;# 
   207  001B                     	;# 
   208  001B                     	;# 
   209  001C                     	;# 
   210  001D                     	;# 
   211  001E                     	;# 
   212  001F                     	;# 
   213  0081                     	;# 
   214  0085                     	;# 
   215  0086                     	;# 
   216  0087                     	;# 
   217  0088                     	;# 
   218  0089                     	;# 
   219  008C                     	;# 
   220  008D                     	;# 
   221  008E                     	;# 
   222  0091                     	;# 
   223  0092                     	;# 
   224  0093                     	;# 
   225  0094                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009C                     	;# 
   229  009D                     	;# 
   230  009E                     	;# 
   231  009F                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  018C                     	;# 
   237  018D                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  000E                     	;# 
   253  000E                     	;# 
   254  000F                     	;# 
   255  0010                     	;# 
   256  0011                     	;# 
   257  0012                     	;# 
   258  0013                     	;# 
   259  0014                     	;# 
   260  0015                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0017                     	;# 
   264  0018                     	;# 
   265  0019                     	;# 
   266  001A                     	;# 
   267  001B                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001D                     	;# 
   271  001E                     	;# 
   272  001F                     	;# 
   273  0081                     	;# 
   274  0085                     	;# 
   275  0086                     	;# 
   276  0087                     	;# 
   277  0088                     	;# 
   278  0089                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  008E                     	;# 
   282  0091                     	;# 
   283  0092                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009C                     	;# 
   289  009D                     	;# 
   290  009E                     	;# 
   291  009F                     	;# 
   292  010C                     	;# 
   293  010D                     	;# 
   294  010E                     	;# 
   295  010F                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0098                     	;# 
   347  0099                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  010C                     	;# 
   353  010D                     	;# 
   354  010E                     	;# 
   355  010F                     	;# 
   356  018C                     	;# 
   357  018D                     	;# 
   358  0000                     	;# 
   359  0001                     	;# 
   360  0002                     	;# 
   361  0003                     	;# 
   362  0004                     	;# 
   363  0005                     	;# 
   364  0006                     	;# 
   365  0007                     	;# 
   366  0008                     	;# 
   367  0009                     	;# 
   368  000A                     	;# 
   369  000B                     	;# 
   370  000C                     	;# 
   371  000D                     	;# 
   372  000E                     	;# 
   373  000E                     	;# 
   374  000F                     	;# 
   375  0010                     	;# 
   376  0011                     	;# 
   377  0012                     	;# 
   378  0013                     	;# 
   379  0014                     	;# 
   380  0015                     	;# 
   381  0015                     	;# 
   382  0016                     	;# 
   383  0017                     	;# 
   384  0018                     	;# 
   385  0019                     	;# 
   386  001A                     	;# 
   387  001B                     	;# 
   388  001B                     	;# 
   389  001C                     	;# 
   390  001D                     	;# 
   391  001E                     	;# 
   392  001F                     	;# 
   393  0081                     	;# 
   394  0085                     	;# 
   395  0086                     	;# 
   396  0087                     	;# 
   397  0088                     	;# 
   398  0089                     	;# 
   399  008C                     	;# 
   400  008D                     	;# 
   401  008E                     	;# 
   402  0091                     	;# 
   403  0092                     	;# 
   404  0093                     	;# 
   405  0094                     	;# 
   406  0098                     	;# 
   407  0099                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  009F                     	;# 
   412  010C                     	;# 
   413  010D                     	;# 
   414  010E                     	;# 
   415  010F                     	;# 
   416  018C                     	;# 
   417  018D                     	;# 
   418                           
   419                           	psect	idataBANK0
   420  0525                     __pidataBANK0:	
   421                           
   422                           ;initializer for main@F1124
   423  0525  346D               	retlw	109
   424  0526  346F               	retlw	111
   425  0527  3473               	retlw	115
   426  0528  3474               	retlw	116
   427  0529  3461               	retlw	97
   428  052A  3466               	retlw	102
   429  052B  3461               	retlw	97
   430  052C  3400               	retlw	0
   431  052D  3400               	retlw	0
   432  052E  3400               	retlw	0
   433  052F  3400               	retlw	0
   434  0530  3400               	retlw	0
   435  0531  3400               	retlw	0
   436                           
   437                           ;initializer for main@F1122
   438  0532  346D               	retlw	109
   439  0533  346F               	retlw	111
   440  0534  3468               	retlw	104
   441  0535  3461               	retlw	97
   442  0536  346D               	retlw	109
   443  0537  3465               	retlw	101
   444  0538  3464               	retlw	100
   445  0539  3400               	retlw	0
   446  053A  3400               	retlw	0
   447  053B  3400               	retlw	0
   448  053C  3400               	retlw	0
   449  053D  3400               	retlw	0
   450  053E  3400               	retlw	0
   451  0006                     _PORTB	set	6
   452  001A                     _RCREG	set	26
   453  000C                     _PIR1	set	12
   454  0019                     _TXREG	set	25
   455  0018                     _RCSTAbits	set	24
   456  0065                     _RCIF	set	101
   457  0086                     _TRISB	set	134
   458  0098                     _TXSTA	set	152
   459  0099                     _SPBRG	set	153
   460  0098                     _TXSTAbits	set	152
   461  04C1                     _TRMT	set	1217
   462  043F                     _TRISC7	set	1087
   463  043E                     _TRISC6	set	1086
   464                           
   465                           	psect	strings
   466  0003                     __pstrings:	
   467  0003                     stringtab:	
   468  0003                     __stringtab:	
   469  0003                     stringcode:	
   470                           ;	String table - string pointers are 1 byte each
   471                           
   472  0003                     stringdir:	
   473  0003  3000               	movlw	high stringdir
   474  0004  008A               	movwf	10
   475  0005  0804               	movf	4,w
   476  0006  0A84               	incf	4,f
   477  0007  0782               	addwf	2,f
   478  0008                     __stringbase:	
   479  0008  3400               	retlw	0
   480  0009                     __end_of__stringtab:	
   481  0009                     STR_2:	
   482  0009  3441               	retlw	65	;'A'
   483  000A  3454               	retlw	84	;'T'
   484  000B  342B               	retlw	43	;'+'
   485  000C  3443               	retlw	67	;'C'
   486  000D  344D               	retlw	77	;'M'
   487  000E  3447               	retlw	71	;'G'
   488  000F  3446               	retlw	70	;'F'
   489  0010  343D               	retlw	61	;'='
   490  0011  3431               	retlw	49	;'1'
   491  0012  3400               	retlw	0
   492  0013                     STR_3:	
   493  0013  3441               	retlw	65	;'A'
   494  0014  3454               	retlw	84	;'T'
   495  0015  342B               	retlw	43	;'+'
   496  0016  3443               	retlw	67	;'C'
   497  0017  3447               	retlw	71	;'G'
   498  0018  344D               	retlw	77	;'M'
   499  0019  3453               	retlw	83	;'S'
   500  001A  343D               	retlw	61	;'='
   501  001B  3400               	retlw	0
   502  001C                     STR_1:	
   503  001C  3441               	retlw	65	;'A'
   504  001D  3454               	retlw	84	;'T'
   505  001E  3400               	retlw	0
   506                           
   507                           ; #config settings
   508  0000                     
   509                           	psect	cinit
   510  07EE                     start_initialization:	
   511  07EE                     __initialization:	
   512                           
   513                           ; Initialize objects allocated to BANK0
   514  07EE  1383               	bcf	3,7	;select IRP bank0
   515  07EF  3058               	movlw	low (__pdataBANK0+26)
   516  07F0  00FD               	movwf	btemp+-1
   517  07F1  3005               	movlw	high __pidataBANK0
   518  07F2  00FE               	movwf	btemp
   519  07F3  3025               	movlw	low __pidataBANK0
   520  07F4  00FF               	movwf	btemp+1
   521  07F5  303E               	movlw	low __pdataBANK0
   522  07F6  0084               	movwf	4
   523  07F7  120A  118A  2500  120A  118A  	fcall	init_ram0
   524  07FC                     end_of_initialization:	
   525                           ;End of C runtime variable initialization code
   526                           
   527  07FC                     __end_of__initialization:	
   528  07FC  0183               	clrf	3
   529  07FD  120A  118A  2DC1   	ljmp	_main	;jump to C main() function
   530                           
   531                           	psect	dataBANK0
   532  003E                     __pdataBANK0:	
   533  003E                     main@F1124:	
   534  003E                     	ds	13
   535  004B                     main@F1122:	
   536  004B                     	ds	13
   537                           
   538                           	psect	inittext
   539  04FC                     init_fetch0:	
   540                           ;	Called with low address in FSR and high address in W
   541                           
   542  04FC  087E               	movf	btemp,w
   543  04FD  008A               	movwf	10
   544  04FE  087F               	movf	btemp+1,w
   545  04FF  0082               	movwf	2
   546  0500                     init_ram0:	
   547                           ;Called with:
   548                           ;	high address of idata address in btemp 
   549                           ;	low address of idata address in btemp+1 
   550                           ;	low address of data in FSR
   551                           ;	high address + 1 of data in btemp-1
   552                           
   553  0500  120A  118A  24FC  120A  118A  	fcall	init_fetch0
   554  0505  0080               	movwf	0
   555  0506  0A84               	incf	4,f
   556  0507  0804               	movf	4,w
   557  0508  067D               	xorwf	btemp+-1,w
   558  0509  1903               	btfsc	3,2
   559  050A  3400               	retlw	0
   560  050B  0AFF               	incf	btemp+1,f
   561  050C  1903               	btfsc	3,2
   562  050D  0AFE               	incf	btemp,f
   563  050E  2D00               	goto	init_ram0
   564                           
   565                           	psect	cstackCOMMON
   566  0070                     __pcstackCOMMON:	
   567  0070                     ?_GPS_init:	
   568  0070                     ??_GPS_init:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_LCD_init:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_LCD_displayString:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_LCD_sendCommand:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ??_LCD_sendCommand:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_UART_receiver_init:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ??_UART_receiver_init:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_UART_receiveByte:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ??_UART_receiveByte:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_main:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_LCD_displayCharacter:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ??_LCD_displayCharacter:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 1 bytes @ 0x0
   606  0070                     	ds	2
   607  0072                     LCD_sendCommand@command:	
   608  0072                     LCD_displayCharacter@character:	
   609                           ; 1 bytes @ 0x2
   610                           
   611                           
   612                           ; 1 bytes @ 0x2
   613  0072                     	ds	1
   614  0073                     ??_LCD_init:	
   615  0073                     ??_LCD_displayString:	
   616                           ; 1 bytes @ 0x3
   617                           
   618  0073                     ?_LCD_goToRowColum:	
   619                           ; 1 bytes @ 0x3
   620                           
   621  0073                     LCD_goToRowColum@col:	
   622                           ; 1 bytes @ 0x3
   623                           
   624                           
   625                           ; 1 bytes @ 0x3
   626  0073                     	ds	1
   627  0074                     ?_GPS_setLocation:	
   628  0074                     ??_LCD_goToRowColum:	
   629                           ; 1 bytes @ 0x4
   630                           
   631  0074                     GPS_setLocation@latitude:	
   632                           ; 1 bytes @ 0x4
   633                           
   634  0074                     LCD_displayString@i:	
   635                           ; 1 bytes @ 0x4
   636                           
   637                           
   638                           ; 1 bytes @ 0x4
   639  0074                     	ds	1
   640  0075                     ??_GPS_setLocation:	
   641  0075                     LCD_displayString@data:	
   642                           ; 1 bytes @ 0x5
   643                           
   644                           
   645                           ; 1 bytes @ 0x5
   646  0075                     	ds	1
   647  0076                     LCD_goToRowColum@row:	
   648                           
   649                           ; 1 bytes @ 0x6
   650  0076                     	ds	1
   651  0077                     GPS_setLocation@longitude:	
   652  0077                     LCD_goToRowColum@address:	
   653                           ; 1 bytes @ 0x7
   654                           
   655                           
   656                           ; 1 bytes @ 0x7
   657  0077                     	ds	1
   658  0078                     ?_displayStringRowColom:	
   659  0078                     GPS_setLocation@i:	
   660                           ; 1 bytes @ 0x8
   661                           
   662  0078                     displayStringRowColom@col:	
   663                           ; 1 bytes @ 0x8
   664                           
   665                           
   666                           ; 1 bytes @ 0x8
   667  0078                     	ds	1
   668  0079                     GPS_setLocation@i_205:	
   669  0079                     displayStringRowColom@data:	
   670                           ; 1 bytes @ 0x9
   671                           
   672                           
   673                           ; 1 bytes @ 0x9
   674  0079                     	ds	1
   675  007A                     ??_displayStringRowColom:	
   676  007A                     GPS_setLocation@received_data:	
   677                           ; 1 bytes @ 0xA
   678                           
   679                           
   680                           ; 1 bytes @ 0xA
   681  007A                     	ds	1
   682  007B                     displayStringRowColom@row:	
   683                           
   684                           ; 1 bytes @ 0xB
   685  007B                     	ds	1
   686                           
   687                           	psect	cstackBANK0
   688  0020                     __pcstackBANK0:	
   689  0020                     ??_main:	
   690                           
   691                           ; 1 bytes @ 0x0
   692  0020                     	ds	4
   693  0024                     main@longitude:	
   694                           
   695                           ; 13 bytes @ 0x4
   696  0024                     	ds	13
   697  0031                     main@latitude:	
   698                           
   699                           ; 13 bytes @ 0x11
   700  0031                     	ds	13
   701                           
   702                           	psect	maintext
   703  05C1                     __pmaintext:	
   704 ;;
   705 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   706 ;;
   707 ;; *************** function _main *****************
   708 ;; Defined at:
   709 ;;		line 12 in file "main.c"
   710 ;; Parameters:    Size  Location     Type
   711 ;;		None
   712 ;; Auto vars:     Size  Location     Type
   713 ;;  latitude       13   17[BANK0 ] unsigned char [13]
   714 ;;  longitude      13    4[BANK0 ] unsigned char [13]
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : B00/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         0      26       0       0       0
   726 ;;      Temps:          0       4       0       0       0
   727 ;;      Totals:         0      30       0       0       0
   728 ;;Total ram usage:       30 bytes
   729 ;; Hardware stack levels required when called:    3
   730 ;; This function calls:
   731 ;;		_GPS_init
   732 ;;		_GPS_setLocation
   733 ;;		_LCD_displayString
   734 ;;		_LCD_init
   735 ;;		_displayStringRowColom
   736 ;; This function is called by:
   737 ;;		Startup code after reset
   738 ;; This function uses a non-reentrant model
   739 ;;
   740                           
   741                           
   742                           ;psect for function _main
   743  05C1                     _main:	
   744  05C1                     l1306:	
   745                           ;incstack = 0
   746                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   747                           
   748                           
   749                           ;main.c: 14:      GPS_init();
   750  05C1  120A  118A  24D2  120A  118A  	fcall	_GPS_init
   751                           
   752                           ;main.c: 15:      LCD_init();
   753  05C6  120A  118A  255D  120A  118A  	fcall	_LCD_init
   754  05CB                     l1308:	
   755                           
   756                           ;main.c: 17:      Uint8 longitude[13]="mohamed",latitude[13]="mostafa";
   757  05CB  3024               	movlw	main@longitude& (0+255)
   758  05CC  0084               	movwf	4
   759  05CD  304B               	movlw	low main@F1122
   760  05CE  1283               	bcf	3,5	;RP0=0, select bank0
   761  05CF  1303               	bcf	3,6	;RP1=0, select bank0
   762  05D0  00A0               	movwf	??_main
   763  05D1  0804               	movf	4,w
   764  05D2  00A1               	movwf	??_main+1
   765  05D3  300D               	movlw	13
   766  05D4  00A2               	movwf	??_main+2
   767  05D5                     u450:	
   768  05D5  0820               	movf	??_main,w
   769  05D6  0084               	movwf	4
   770  05D7  1383               	bcf	3,7	;select IRP bank0
   771  05D8  0800               	movf	0,w
   772  05D9  00A3               	movwf	??_main+3
   773  05DA  0AA0               	incf	??_main,f
   774  05DB  0821               	movf	??_main+1,w
   775  05DC  0084               	movwf	4
   776  05DD  0823               	movf	??_main+3,w
   777  05DE  0080               	movwf	0
   778  05DF  0AA1               	incf	??_main+1,f
   779  05E0  0BA2               	decfsz	??_main+2,f
   780  05E1  2DD5               	goto	u450
   781  05E2                     l1310:	
   782  05E2  3031               	movlw	main@latitude& (0+255)
   783  05E3  0084               	movwf	4
   784  05E4  303E               	movlw	low main@F1124
   785  05E5  00A0               	movwf	??_main
   786  05E6  0804               	movf	4,w
   787  05E7  00A1               	movwf	??_main+1
   788  05E8  300D               	movlw	13
   789  05E9  00A2               	movwf	??_main+2
   790  05EA                     u460:	
   791  05EA  0820               	movf	??_main,w
   792  05EB  0084               	movwf	4
   793  05EC  1383               	bcf	3,7	;select IRP bank0
   794  05ED  0800               	movf	0,w
   795  05EE  00A3               	movwf	??_main+3
   796  05EF  0AA0               	incf	??_main,f
   797  05F0  0821               	movf	??_main+1,w
   798  05F1  0084               	movwf	4
   799  05F2  0823               	movf	??_main+3,w
   800  05F3  0080               	movwf	0
   801  05F4  0AA1               	incf	??_main+1,f
   802  05F5  0BA2               	decfsz	??_main+2,f
   803  05F6  2DEA               	goto	u460
   804  05F7                     l1312:	
   805                           
   806                           ;main.c: 19:      GPS_setLocation(longitude , latitude);
   807  05F7  3031               	movlw	(low (main@latitude| 0))& (0+255)
   808  05F8  00A0               	movwf	??_main
   809  05F9  0820               	movf	??_main,w
   810  05FA  00F4               	movwf	GPS_setLocation@latitude
   811  05FB  3024               	movlw	(low (main@longitude| 0))& (0+255)
   812  05FC  120A  118A  26FF  120A  118A  	fcall	_GPS_setLocation
   813  0601                     l1314:	
   814                           
   815                           ;main.c: 20:     LCD_displayString(latitude);
   816  0601  3031               	movlw	(low (main@latitude| 0))& (0+255)
   817  0602  120A  118A  253F  120A  118A  	fcall	_LCD_displayString
   818  0607                     l1316:	
   819                           
   820                           ;main.c: 21:     displayStringRowColom(1,0,longitude);
   821  0607  01F8               	clrf	displayStringRowColom@col
   822  0608  3024               	movlw	(low (main@longitude| 0))& (0+255)
   823  0609  1283               	bcf	3,5	;RP0=0, select bank0
   824  060A  1303               	bcf	3,6	;RP1=0, select bank0
   825  060B  00A0               	movwf	??_main
   826  060C  0820               	movf	??_main,w
   827  060D  00F9               	movwf	displayStringRowColom@data
   828  060E  3001               	movlw	1
   829  060F  120A  118A  24EA  120A  118A  	fcall	_displayStringRowColom
   830  0614                     l71:	
   831                           ;main.c: 22:     while(1)
   832                           
   833  0614                     l72:	
   834                           ;main.c: 23:     {;main.c: 27:     }
   835                           
   836  0614  2E14               	goto	l71
   837  0615  120A  118A  2800   	ljmp	start
   838  0618                     __end_of_main:	
   839                           
   840                           	psect	text1
   841  04EA                     __ptext1:	
   842 ;; *************** function _displayStringRowColom *****************
   843 ;; Defined at:
   844 ;;		line 124 in file "LCD.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  row             1    wreg     unsigned char 
   847 ;;  col             1    8[COMMON] unsigned char 
   848 ;;  data            1    9[COMMON] PTR unsigned char 
   849 ;;		 -> main@longitude(13), 
   850 ;; Auto vars:     Size  Location     Type
   851 ;;  row             1   11[COMMON] unsigned char 
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         2       0       0       0       0
   862 ;;      Locals:         1       0       0       0       0
   863 ;;      Temps:          1       0       0       0       0
   864 ;;      Totals:         4       0       0       0       0
   865 ;;Total ram usage:        4 bytes
   866 ;; Hardware stack levels used:    1
   867 ;; Hardware stack levels required when called:    2
   868 ;; This function calls:
   869 ;;		_LCD_displayString
   870 ;;		_LCD_goToRowColum
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           
   876                           
   877                           ;psect for function _displayStringRowColom
   878  04EA                     _displayStringRowColom:	
   879                           
   880                           ;incstack = 0
   881                           ; Regs used in _displayStringRowColom: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   882                           ;displayStringRowColom@row stored from wreg
   883  04EA  00FB               	movwf	displayStringRowColom@row
   884  04EB                     l1294:	
   885                           
   886                           ;LCD.c: 124: void displayStringRowColom(Uint8 row,Uint8 col,Uint8 *data);LCD.c: 125: {;L
      +                          CD.c: 126:     LCD_goToRowColum(row,col);
   887  04EB  0878               	movf	displayStringRowColom@col,w
   888  04EC  00FA               	movwf	??_displayStringRowColom
   889  04ED  087A               	movf	??_displayStringRowColom,w
   890  04EE  00F3               	movwf	LCD_goToRowColum@col
   891  04EF  087B               	movf	displayStringRowColom@row,w
   892  04F0  120A  118A  258A  120A  118A  	fcall	_LCD_goToRowColum
   893                           
   894                           ;LCD.c: 127:     LCD_displayString(data);
   895  04F5  0879               	movf	displayStringRowColom@data,w
   896  04F6  120A  118A  253F  120A  118A  	fcall	_LCD_displayString
   897  04FB                     l158:	
   898  04FB  0008               	return
   899  04FC                     __end_of_displayStringRowColom:	
   900                           
   901                           	psect	text2
   902  058A                     __ptext2:	
   903 ;; *************** function _LCD_goToRowColum *****************
   904 ;; Defined at:
   905 ;;		line 111 in file "LCD.c"
   906 ;; Parameters:    Size  Location     Type
   907 ;;  row             1    wreg     unsigned char 
   908 ;;  col             1    3[COMMON] unsigned char 
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  row             1    6[COMMON] unsigned char 
   911 ;;  address         1    7[COMMON] unsigned char 
   912 ;; Return value:  Size  Location     Type
   913 ;;                  1    wreg      void 
   914 ;; Registers used:
   915 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   916 ;; Tracked objects:
   917 ;;		On entry : 0/0
   918 ;;		On exit  : 0/0
   919 ;;		Unchanged: 0/0
   920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   921 ;;      Params:         1       0       0       0       0
   922 ;;      Locals:         2       0       0       0       0
   923 ;;      Temps:          2       0       0       0       0
   924 ;;      Totals:         5       0       0       0       0
   925 ;;Total ram usage:        5 bytes
   926 ;; Hardware stack levels used:    1
   927 ;; Hardware stack levels required when called:    1
   928 ;; This function calls:
   929 ;;		_LCD_sendCommand
   930 ;; This function is called by:
   931 ;;		_displayStringRowColom
   932 ;; This function uses a non-reentrant model
   933 ;;
   934                           
   935                           
   936                           ;psect for function _LCD_goToRowColum
   937  058A                     _LCD_goToRowColum:	
   938                           
   939                           ;incstack = 0
   940                           ; Regs used in _LCD_goToRowColum: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   941                           ;LCD_goToRowColum@row stored from wreg
   942  058A  00F6               	movwf	LCD_goToRowColum@row
   943  058B                     l1182:	
   944                           
   945                           ;LCD.c: 111: void LCD_goToRowColum(Uint8 row,Uint8 col);LCD.c: 112: {;LCD.c: 113:     Ui
      +                          nt8 address;;LCD.c: 114:     switch(row)
   946  058B  2DA3               	goto	l1194
   947  058C                     l1184:	
   948  058C  0873               	movf	LCD_goToRowColum@col,w
   949  058D  00F4               	movwf	??_LCD_goToRowColum
   950  058E  0874               	movf	??_LCD_goToRowColum,w
   951  058F  00F7               	movwf	LCD_goToRowColum@address
   952  0590  2DB9               	goto	l1196
   953  0591                     l1186:	
   954  0591  0873               	movf	LCD_goToRowColum@col,w
   955  0592  3E40               	addlw	64
   956  0593  00F4               	movwf	??_LCD_goToRowColum
   957  0594  0874               	movf	??_LCD_goToRowColum,w
   958  0595  00F7               	movwf	LCD_goToRowColum@address
   959  0596  2DB9               	goto	l1196
   960  0597                     l1188:	
   961  0597  0873               	movf	LCD_goToRowColum@col,w
   962  0598  3E10               	addlw	16
   963  0599  00F4               	movwf	??_LCD_goToRowColum
   964  059A  0874               	movf	??_LCD_goToRowColum,w
   965  059B  00F7               	movwf	LCD_goToRowColum@address
   966  059C  2DB9               	goto	l1196
   967  059D                     l1190:	
   968  059D  0873               	movf	LCD_goToRowColum@col,w
   969  059E  3E50               	addlw	80
   970  059F  00F4               	movwf	??_LCD_goToRowColum
   971  05A0  0874               	movf	??_LCD_goToRowColum,w
   972  05A1  00F7               	movwf	LCD_goToRowColum@address
   973  05A2  2DB9               	goto	l1196
   974  05A3                     l1194:	
   975  05A3  0876               	movf	LCD_goToRowColum@row,w
   976  05A4  00F4               	movwf	??_LCD_goToRowColum
   977  05A5  01F5               	clrf	??_LCD_goToRowColum+1
   978                           
   979                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   980                           ; Switch size 1, requested type "simple"
   981                           ; Number of cases is 1, Range of values is 0 to 0
   982                           ; switch strategies available:
   983                           ; Name         Instructions Cycles
   984                           ; simple_byte            4     3 (average)
   985                           ; direct_byte           11     8 (fixed)
   986                           ; jumptable            260     6 (fixed)
   987                           ;	Chosen strategy is simple_byte
   988  05A6  0875               	movf	??_LCD_goToRowColum+1,w
   989  05A7  3A00               	xorlw	0	; case 0
   990  05A8  1903               	skipnz
   991  05A9  2DAB               	goto	l1394
   992  05AA  2DB9               	goto	l1196
   993  05AB                     l1394:	
   994                           
   995                           ; Switch size 1, requested type "simple"
   996                           ; Number of cases is 4, Range of values is 0 to 3
   997                           ; switch strategies available:
   998                           ; Name         Instructions Cycles
   999                           ; simple_byte           13     7 (average)
  1000                           ; direct_byte           20     8 (fixed)
  1001                           ; jumptable            260     6 (fixed)
  1002                           ;	Chosen strategy is simple_byte
  1003  05AB  0874               	movf	??_LCD_goToRowColum,w
  1004  05AC  3A00               	xorlw	0	; case 0
  1005  05AD  1903               	skipnz
  1006  05AE  2D8C               	goto	l1184
  1007  05AF  3A01               	xorlw	1	; case 1
  1008  05B0  1903               	skipnz
  1009  05B1  2D91               	goto	l1186
  1010  05B2  3A03               	xorlw	3	; case 2
  1011  05B3  1903               	skipnz
  1012  05B4  2D97               	goto	l1188
  1013  05B5  3A01               	xorlw	1	; case 3
  1014  05B6  1903               	skipnz
  1015  05B7  2D9D               	goto	l1190
  1016  05B8  2DB9               	goto	l1196
  1017  05B9                     l1196:	
  1018                           
  1019                           ;LCD.c: 121:     LCD_sendCommand(address | 0x80);
  1020  05B9  0877               	movf	LCD_goToRowColum@address,w
  1021  05BA  3880               	iorlw	128
  1022  05BB  120A  118A  268A  120A  118A  	fcall	_LCD_sendCommand
  1023  05C0                     l155:	
  1024  05C0  0008               	return
  1025  05C1                     __end_of_LCD_goToRowColum:	
  1026                           
  1027                           	psect	text3
  1028  053F                     __ptext3:	
  1029 ;; *************** function _LCD_displayString *****************
  1030 ;; Defined at:
  1031 ;;		line 102 in file "LCD.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  data            1    wreg     PTR unsigned char 
  1034 ;;		 -> LCD_intergerToString@buffer(16), main@latitude(13), main@longitude(13), 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  data            1    5[COMMON] PTR unsigned char 
  1037 ;;		 -> LCD_intergerToString@buffer(16), main@latitude(13), main@longitude(13), 
  1038 ;;  i               1    4[COMMON] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0
  1049 ;;      Locals:         2       0       0       0       0
  1050 ;;      Temps:          1       0       0       0       0
  1051 ;;      Totals:         3       0       0       0       0
  1052 ;;Total ram usage:        3 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    1
  1055 ;; This function calls:
  1056 ;;		_LCD_displayCharacter
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;;		_displayStringRowColom
  1060 ;;		_LCD_intergerToString
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _LCD_displayString
  1066  053F                     _LCD_displayString:	
  1067                           
  1068                           ;incstack = 0
  1069                           ; Regs used in _LCD_displayString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1070                           ;LCD_displayString@data stored from wreg
  1071  053F  00F5               	movwf	LCD_displayString@data
  1072  0540                     l1174:	
  1073                           
  1074                           ;LCD.c: 102: void LCD_displayString(Uint8 *data);LCD.c: 103: {;LCD.c: 104:     Uint8 i=0
      +                          ;
  1075  0540  01F4               	clrf	LCD_displayString@i
  1076                           
  1077                           ;LCD.c: 105:     while(data[i]!='\0')
  1078  0541  2D51               	goto	l1180
  1079  0542                     l1176:	
  1080                           
  1081                           ;LCD.c: 106:     {;LCD.c: 107:         LCD_displayCharacter(data[i]);
  1082  0542  0874               	movf	LCD_displayString@i,w
  1083  0543  0775               	addwf	LCD_displayString@data,w
  1084  0544  00F3               	movwf	??_LCD_displayString
  1085  0545  0873               	movf	??_LCD_displayString,w
  1086  0546  0084               	movwf	4
  1087  0547  0800               	movf	0,w
  1088  0548  120A  118A  2618  120A  118A  	fcall	_LCD_displayCharacter
  1089  054D                     l1178:	
  1090                           
  1091                           ;LCD.c: 108:         i++;
  1092  054D  3001               	movlw	1
  1093  054E  00F3               	movwf	??_LCD_displayString
  1094  054F  0873               	movf	??_LCD_displayString,w
  1095  0550  07F4               	addwf	LCD_displayString@i,f
  1096  0551                     l1180:	
  1097                           
  1098                           ;LCD.c: 105:     while(data[i]!='\0')
  1099  0551  0874               	movf	LCD_displayString@i,w
  1100  0552  0775               	addwf	LCD_displayString@data,w
  1101  0553  00F3               	movwf	??_LCD_displayString
  1102  0554  0873               	movf	??_LCD_displayString,w
  1103  0555  0084               	movwf	4
  1104  0556  1383               	bcf	3,7	;select IRP bank0
  1105  0557  0800               	movf	0,w
  1106  0558  1D03               	btfss	3,2
  1107  0559  2D5B               	goto	u291
  1108  055A  2D5C               	goto	u290
  1109  055B                     u291:	
  1110  055B  2D42               	goto	l1176
  1111  055C                     u290:	
  1112  055C                     l146:	
  1113  055C  0008               	return
  1114  055D                     __end_of_LCD_displayString:	
  1115                           
  1116                           	psect	text4
  1117  0618                     __ptext4:	
  1118 ;; *************** function _LCD_displayCharacter *****************
  1119 ;; Defined at:
  1120 ;;		line 66 in file "LCD.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  character       1    wreg     unsigned char 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  character       1    2[COMMON] unsigned char 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         1       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0
  1137 ;;      Totals:         3       0       0       0       0
  1138 ;;Total ram usage:        3 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		_LCD_displayString
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _LCD_displayCharacter
  1149  0618                     _LCD_displayCharacter:	
  1150                           
  1151                           ;incstack = 0
  1152                           ; Regs used in _LCD_displayCharacter: [wreg+status,2+status,0]
  1153                           ;LCD_displayCharacter@character stored from wreg
  1154  0618  00F2               	movwf	LCD_displayCharacter@character
  1155  0619                     l1118:	
  1156                           
  1157                           ;LCD.c: 66: void LCD_displayCharacter(Uint8 character);LCD.c: 67: {;LCD.c: 68:     ((POR
      +                          TB)|=(1<<0));
  1158  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1159  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1160  061B  1406               	bsf	6,0	;volatile
  1161  061C                     l1120:	
  1162                           
  1163                           ;LCD.c: 69:     ((PORTB)&=(~(1<<1)));
  1164  061C  30FD               	movlw	253
  1165  061D  00F0               	movwf	??_LCD_displayCharacter
  1166  061E  0870               	movf	??_LCD_displayCharacter,w
  1167  061F  0586               	andwf	6,f	;volatile
  1168  0620                     l1122:	
  1169                           
  1170                           ;LCD.c: 70:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1171  0620  3006               	movlw	6
  1172  0621  00F1               	movwf	??_LCD_displayCharacter+1
  1173  0622  3030               	movlw	48
  1174  0623  00F0               	movwf	??_LCD_displayCharacter
  1175  0624                     u477:	
  1176  0624  0BF0               	decfsz	??_LCD_displayCharacter,f
  1177  0625  2E24               	goto	u477
  1178  0626  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1179  0627  2E24               	goto	u477
  1180  0628  0000               	nop
  1181  0629                     l1124:	
  1182                           
  1183                           ;LCD.c: 71:     ((PORTB)|=(1<<2));
  1184  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1185  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1186  062B  1506               	bsf	6,2	;volatile
  1187  062C                     l1126:	
  1188                           
  1189                           ;LCD.c: 72:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1190  062C  3006               	movlw	6
  1191  062D  00F1               	movwf	??_LCD_displayCharacter+1
  1192  062E  3030               	movlw	48
  1193  062F  00F0               	movwf	??_LCD_displayCharacter
  1194  0630                     u487:	
  1195  0630  0BF0               	decfsz	??_LCD_displayCharacter,f
  1196  0631  2E30               	goto	u487
  1197  0632  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1198  0633  2E30               	goto	u487
  1199  0634  0000               	nop
  1200                           
  1201                           ;LCD.c: 75:     PORTB =(PORTB &0X0F)|(character &0XF0);
  1202  0635  30F0               	movlw	240
  1203  0636  0572               	andwf	LCD_displayCharacter@character,w
  1204  0637  00F0               	movwf	??_LCD_displayCharacter
  1205  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1207  063A  0806               	movf	6,w	;volatile
  1208  063B  390F               	andlw	15
  1209  063C  0470               	iorwf	??_LCD_displayCharacter,w
  1210  063D  0086               	movwf	6	;volatile
  1211  063E                     l1128:	
  1212                           
  1213                           ;LCD.c: 79:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1214  063E  3006               	movlw	6
  1215  063F  00F1               	movwf	??_LCD_displayCharacter+1
  1216  0640  3030               	movlw	48
  1217  0641  00F0               	movwf	??_LCD_displayCharacter
  1218  0642                     u497:	
  1219  0642  0BF0               	decfsz	??_LCD_displayCharacter,f
  1220  0643  2E42               	goto	u497
  1221  0644  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1222  0645  2E42               	goto	u497
  1223  0646  0000               	nop
  1224  0647                     l1130:	
  1225                           
  1226                           ;LCD.c: 80:     ((PORTB)&=(~(1<<2)));
  1227  0647  30FB               	movlw	251
  1228  0648  00F0               	movwf	??_LCD_displayCharacter
  1229  0649  0870               	movf	??_LCD_displayCharacter,w
  1230  064A  1283               	bcf	3,5	;RP0=0, select bank0
  1231  064B  1303               	bcf	3,6	;RP1=0, select bank0
  1232  064C  0586               	andwf	6,f	;volatile
  1233                           
  1234                           ;LCD.c: 81:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1235  064D  3006               	movlw	6
  1236  064E  00F1               	movwf	??_LCD_displayCharacter+1
  1237  064F  3030               	movlw	48
  1238  0650  00F0               	movwf	??_LCD_displayCharacter
  1239  0651                     u507:	
  1240  0651  0BF0               	decfsz	??_LCD_displayCharacter,f
  1241  0652  2E51               	goto	u507
  1242  0653  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1243  0654  2E51               	goto	u507
  1244  0655  0000               	nop
  1245  0656                     l1132:	
  1246                           
  1247                           ;LCD.c: 82:     ((PORTB)|=(1<<2));
  1248  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1249  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0658  1506               	bsf	6,2	;volatile
  1251                           
  1252                           ;LCD.c: 83:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1253  0659  3006               	movlw	6
  1254  065A  00F1               	movwf	??_LCD_displayCharacter+1
  1255  065B  3030               	movlw	48
  1256  065C  00F0               	movwf	??_LCD_displayCharacter
  1257  065D                     u517:	
  1258  065D  0BF0               	decfsz	??_LCD_displayCharacter,f
  1259  065E  2E5D               	goto	u517
  1260  065F  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1261  0660  2E5D               	goto	u517
  1262  0661  0000               	nop
  1263  0662                     l1134:	
  1264                           
  1265                           ;LCD.c: 85:     PORTB =(PORTB &0X0F)|((character &0X0F)<<4);
  1266  0662  0872               	movf	LCD_displayCharacter@character,w
  1267  0663  390F               	andlw	15
  1268  0664  00F0               	movwf	??_LCD_displayCharacter
  1269  0665  3004               	movlw	4
  1270  0666                     u265:	
  1271  0666  1003               	clrc
  1272  0667  0DF0               	rlf	??_LCD_displayCharacter,f
  1273  0668  3EFF               	addlw	-1
  1274  0669  1D03               	skipz
  1275  066A  2E66               	goto	u265
  1276  066B  1283               	bcf	3,5	;RP0=0, select bank0
  1277  066C  1303               	bcf	3,6	;RP1=0, select bank0
  1278  066D  0806               	movf	6,w	;volatile
  1279  066E  390F               	andlw	15
  1280  066F  0470               	iorwf	??_LCD_displayCharacter,w
  1281  0670  0086               	movwf	6	;volatile
  1282  0671                     l1136:	
  1283                           
  1284                           ;LCD.c: 89:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1285  0671  3006               	movlw	6
  1286  0672  00F1               	movwf	??_LCD_displayCharacter+1
  1287  0673  3030               	movlw	48
  1288  0674  00F0               	movwf	??_LCD_displayCharacter
  1289  0675                     u527:	
  1290  0675  0BF0               	decfsz	??_LCD_displayCharacter,f
  1291  0676  2E75               	goto	u527
  1292  0677  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1293  0678  2E75               	goto	u527
  1294  0679  0000               	nop
  1295                           
  1296                           ;LCD.c: 90:     ((PORTB)&=(~(1<<2)));
  1297  067A  30FB               	movlw	251
  1298  067B  00F0               	movwf	??_LCD_displayCharacter
  1299  067C  0870               	movf	??_LCD_displayCharacter,w
  1300  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1301  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1302  067F  0586               	andwf	6,f	;volatile
  1303  0680                     l1138:	
  1304                           
  1305                           ;LCD.c: 91:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1306  0680  3006               	movlw	6
  1307  0681  00F1               	movwf	??_LCD_displayCharacter+1
  1308  0682  3030               	movlw	48
  1309  0683  00F0               	movwf	??_LCD_displayCharacter
  1310  0684                     u537:	
  1311  0684  0BF0               	decfsz	??_LCD_displayCharacter,f
  1312  0685  2E84               	goto	u537
  1313  0686  0BF1               	decfsz	??_LCD_displayCharacter+1,f
  1314  0687  2E84               	goto	u537
  1315  0688  0000               	nop
  1316  0689                     l140:	
  1317  0689  0008               	return
  1318  068A                     __end_of_LCD_displayCharacter:	
  1319                           
  1320                           	psect	text5
  1321  06FF                     __ptext5:	
  1322 ;; *************** function _GPS_setLocation *****************
  1323 ;; Defined at:
  1324 ;;		line 16 in file "GPS.c"
  1325 ;; Parameters:    Size  Location     Type
  1326 ;;  longitude       1    wreg     PTR unsigned char 
  1327 ;;		 -> main@longitude(13), 
  1328 ;;  latitude        1    4[COMMON] PTR unsigned char 
  1329 ;;		 -> main@latitude(13), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  longitude       1    7[COMMON] PTR unsigned char 
  1332 ;;		 -> main@longitude(13), 
  1333 ;;  i               1    9[COMMON] unsigned char 
  1334 ;;  i               1    8[COMMON] unsigned char 
  1335 ;;  received_dat    1   10[COMMON] unsigned char 
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         1       0       0       0       0
  1346 ;;      Locals:         4       0       0       0       0
  1347 ;;      Temps:          2       0       0       0       0
  1348 ;;      Totals:         7       0       0       0       0
  1349 ;;Total ram usage:        7 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    2
  1352 ;; This function calls:
  1353 ;;		_LCD_init
  1354 ;;		_UART_receiveByte
  1355 ;; This function is called by:
  1356 ;;		_main
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           
  1361                           ;psect for function _GPS_setLocation
  1362  06FF                     _GPS_setLocation:	
  1363                           
  1364                           ;incstack = 0
  1365                           ; Regs used in _GPS_setLocation: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1366                           ;GPS_setLocation@longitude stored from wreg
  1367  06FF  00F7               	movwf	GPS_setLocation@longitude
  1368  0700                     l1212:	
  1369                           
  1370                           ;GPS.c: 16: void GPS_setLocation(Uint8 *longitude ,Uint8 *latitude );GPS.c: 17: {;GPS.c:
      +                           18:     LCD_init();
  1371  0700  120A  118A  255D  120A  118A  	fcall	_LCD_init
  1372  0705                     l1214:	
  1373  0705                     l1216:	
  1374                           
  1375                           ;GPS.c: 25:    received_data= UART_receiveByte();
  1376  0705  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1377  070A  00F5               	movwf	??_GPS_setLocation
  1378  070B  0875               	movf	??_GPS_setLocation,w
  1379  070C  00FA               	movwf	GPS_setLocation@received_data
  1380  070D                     l1220:	
  1381                           ;GPS.c: 26:    while(received_data !='$')
  1382                           
  1383                           
  1384                           ;GPS.c: 26:    while(received_data !='$')
  1385  070D  3024               	movlw	36
  1386  070E  067A               	xorwf	GPS_setLocation@received_data,w
  1387  070F  1D03               	btfss	3,2
  1388  0710  2F12               	goto	u311
  1389  0711  2F13               	goto	u310
  1390  0712                     u311:	
  1391  0712  2F05               	goto	l1216
  1392  0713                     u310:	
  1393  0713                     l1222:	
  1394                           
  1395                           ;GPS.c: 30:    if(received_data == '$')
  1396  0713  3024               	movlw	36
  1397  0714  067A               	xorwf	GPS_setLocation@received_data,w
  1398  0715  1D03               	btfss	3,2
  1399  0716  2F18               	goto	u321
  1400  0717  2F19               	goto	u320
  1401  0718                     u321:	
  1402  0718  2FED               	goto	l121
  1403  0719                     u320:	
  1404  0719                     l1224:	
  1405                           
  1406                           ;GPS.c: 31:    { received_data= UART_receiveByte();
  1407  0719  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1408  071E  00F5               	movwf	??_GPS_setLocation
  1409  071F  0875               	movf	??_GPS_setLocation,w
  1410  0720  00FA               	movwf	GPS_setLocation@received_data
  1411  0721                     l1226:	
  1412                           
  1413                           ;GPS.c: 33:        if(received_data == 'G')
  1414  0721  3047               	movlw	71
  1415  0722  067A               	xorwf	GPS_setLocation@received_data,w
  1416  0723  1D03               	btfss	3,2
  1417  0724  2F26               	goto	u331
  1418  0725  2F27               	goto	u330
  1419  0726                     u331:	
  1420  0726  2FED               	goto	l121
  1421  0727                     u330:	
  1422  0727                     l1228:	
  1423                           
  1424                           ;GPS.c: 34:        {;GPS.c: 35:            received_data= UART_receiveByte();
  1425  0727  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1426  072C  00F5               	movwf	??_GPS_setLocation
  1427  072D  0875               	movf	??_GPS_setLocation,w
  1428  072E  00FA               	movwf	GPS_setLocation@received_data
  1429  072F                     l1230:	
  1430                           
  1431                           ;GPS.c: 36:            if(received_data == 'P')
  1432  072F  3050               	movlw	80
  1433  0730  067A               	xorwf	GPS_setLocation@received_data,w
  1434  0731  1D03               	btfss	3,2
  1435  0732  2F34               	goto	u341
  1436  0733  2F35               	goto	u340
  1437  0734                     u341:	
  1438  0734  2FED               	goto	l121
  1439  0735                     u340:	
  1440  0735                     l1232:	
  1441                           
  1442                           ;GPS.c: 37:            {;GPS.c: 38:                received_data= UART_receiveByte();
  1443  0735  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1444  073A  00F5               	movwf	??_GPS_setLocation
  1445  073B  0875               	movf	??_GPS_setLocation,w
  1446  073C  00FA               	movwf	GPS_setLocation@received_data
  1447  073D                     l1234:	
  1448                           
  1449                           ;GPS.c: 39:                if(received_data == 'R')
  1450  073D  3052               	movlw	82
  1451  073E  067A               	xorwf	GPS_setLocation@received_data,w
  1452  073F  1D03               	btfss	3,2
  1453  0740  2F42               	goto	u351
  1454  0741  2F43               	goto	u350
  1455  0742                     u351:	
  1456  0742  2FED               	goto	l121
  1457  0743                     u350:	
  1458  0743                     l1236:	
  1459                           
  1460                           ;GPS.c: 40:                {;GPS.c: 41:                    received_data= UART_receiveBy
      +                          te();
  1461  0743  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1462  0748  00F5               	movwf	??_GPS_setLocation
  1463  0749  0875               	movf	??_GPS_setLocation,w
  1464  074A  00FA               	movwf	GPS_setLocation@received_data
  1465  074B                     l1238:	
  1466                           
  1467                           ;GPS.c: 42:                    if(received_data == 'M')
  1468  074B  304D               	movlw	77
  1469  074C  067A               	xorwf	GPS_setLocation@received_data,w
  1470  074D  1D03               	btfss	3,2
  1471  074E  2F50               	goto	u361
  1472  074F  2F51               	goto	u360
  1473  0750                     u361:	
  1474  0750  2FED               	goto	l121
  1475  0751                     u360:	
  1476  0751                     l1240:	
  1477                           
  1478                           ;GPS.c: 43:                    {;GPS.c: 44:                         received_data= UART_
      +                          receiveByte();
  1479  0751  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1480  0756  00F5               	movwf	??_GPS_setLocation
  1481  0757  0875               	movf	??_GPS_setLocation,w
  1482  0758  00FA               	movwf	GPS_setLocation@received_data
  1483  0759                     l1242:	
  1484                           
  1485                           ;GPS.c: 45:                         if(received_data == 'C')
  1486  0759  3043               	movlw	67
  1487  075A  067A               	xorwf	GPS_setLocation@received_data,w
  1488  075B  1D03               	btfss	3,2
  1489  075C  2F5E               	goto	u371
  1490  075D  2F5F               	goto	u370
  1491  075E                     u371:	
  1492  075E  2FED               	goto	l121
  1493  075F                     u370:	
  1494  075F                     l1244:	
  1495                           
  1496                           ;GPS.c: 46:                         {;GPS.c: 47:                             received_da
      +                          ta= UART_receiveByte();
  1497  075F  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1498  0764  00F5               	movwf	??_GPS_setLocation
  1499  0765  0875               	movf	??_GPS_setLocation,w
  1500  0766  00FA               	movwf	GPS_setLocation@received_data
  1501  0767                     l1246:	
  1502                           
  1503                           ;GPS.c: 48:                             if(received_data == ',')
  1504  0767  302C               	movlw	44
  1505  0768  067A               	xorwf	GPS_setLocation@received_data,w
  1506  0769  1D03               	btfss	3,2
  1507  076A  2F6C               	goto	u381
  1508  076B  2F6D               	goto	u380
  1509  076C                     u381:	
  1510  076C  2FED               	goto	l121
  1511  076D                     u380:	
  1512  076D                     l1248:	
  1513                           
  1514                           ;GPS.c: 49:                             {;GPS.c: 50:                                 rec
      +                          eived_data= UART_receiveByte();
  1515  076D  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1516  0772  00F5               	movwf	??_GPS_setLocation
  1517  0773  0875               	movf	??_GPS_setLocation,w
  1518  0774  00FA               	movwf	GPS_setLocation@received_data
  1519  0775                     l1252:	
  1520                           ;GPS.c: 51:                                 while(received_data !='A')
  1521                           
  1522                           
  1523                           ;GPS.c: 51:                                 while(received_data !='A')
  1524  0775  3041               	movlw	65
  1525  0776  067A               	xorwf	GPS_setLocation@received_data,w
  1526  0777  1D03               	btfss	3,2
  1527  0778  2F7A               	goto	u391
  1528  0779  2F7B               	goto	u390
  1529  077A                     u391:	
  1530  077A  2F6D               	goto	l1248
  1531  077B                     u390:	
  1532  077B                     l1254:	
  1533                           
  1534                           ;GPS.c: 55:                                 received_data= UART_receiveByte();
  1535  077B  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1536  0780  00F5               	movwf	??_GPS_setLocation
  1537  0781  0875               	movf	??_GPS_setLocation,w
  1538  0782  00FA               	movwf	GPS_setLocation@received_data
  1539                           
  1540                           ;GPS.c: 56:                                 received_data= UART_receiveByte();
  1541  0783  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1542  0788  00F5               	movwf	??_GPS_setLocation
  1543  0789  0875               	movf	??_GPS_setLocation,w
  1544  078A  00FA               	movwf	GPS_setLocation@received_data
  1545  078B                     l1256:	
  1546                           
  1547                           ;GPS.c: 57:                                 for(Uint8 i=0;received_data!=',';i++)
  1548  078B  01F8               	clrf	GPS_setLocation@i
  1549  078C                     l1258:	
  1550  078C  302C               	movlw	44
  1551  078D  067A               	xorwf	GPS_setLocation@received_data,w
  1552  078E  1D03               	btfss	3,2
  1553  078F  2F91               	goto	u401
  1554  0790  2F92               	goto	u400
  1555  0791                     u401:	
  1556  0791  2F93               	goto	l1262
  1557  0792                     u400:	
  1558  0792  2FAA               	goto	l1270
  1559  0793                     l1262:	
  1560                           
  1561                           ;GPS.c: 58:                                 {;GPS.c: 59:                                
      +                               latitude[i]=received_data;
  1562  0793  087A               	movf	GPS_setLocation@received_data,w
  1563  0794  00F5               	movwf	??_GPS_setLocation
  1564  0795  0878               	movf	GPS_setLocation@i,w
  1565  0796  0774               	addwf	GPS_setLocation@latitude,w
  1566  0797  00F6               	movwf	??_GPS_setLocation+1
  1567  0798  0876               	movf	??_GPS_setLocation+1,w
  1568  0799  0084               	movwf	4
  1569  079A  0875               	movf	??_GPS_setLocation,w
  1570  079B  1383               	bcf	3,7	;select IRP bank0
  1571  079C  0080               	movwf	0
  1572  079D                     l1264:	
  1573                           
  1574                           ;GPS.c: 60:                                     received_data= UART_receiveByte();
  1575  079D  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1576  07A2  00F5               	movwf	??_GPS_setLocation
  1577  07A3  0875               	movf	??_GPS_setLocation,w
  1578  07A4  00FA               	movwf	GPS_setLocation@received_data
  1579  07A5                     l1266:	
  1580                           
  1581                           ;GPS.c: 61:                                 }
  1582  07A5  3001               	movlw	1
  1583  07A6  00F5               	movwf	??_GPS_setLocation
  1584  07A7  0875               	movf	??_GPS_setLocation,w
  1585  07A8  07F8               	addwf	GPS_setLocation@i,f
  1586  07A9  2F8C               	goto	l1258
  1587  07AA                     l1270:	
  1588                           
  1589                           ;GPS.c: 63:                                 received_data= UART_receiveByte();
  1590  07AA  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1591  07AF  00F5               	movwf	??_GPS_setLocation
  1592  07B0  0875               	movf	??_GPS_setLocation,w
  1593  07B1  00FA               	movwf	GPS_setLocation@received_data
  1594  07B2                     l1272:	
  1595                           
  1596                           ;GPS.c: 64:                                 if(received_data == 'N')
  1597  07B2  304E               	movlw	78
  1598  07B3  067A               	xorwf	GPS_setLocation@received_data,w
  1599  07B4  1D03               	btfss	3,2
  1600  07B5  2FB7               	goto	u411
  1601  07B6  2FB8               	goto	u410
  1602  07B7                     u411:	
  1603  07B7  2FED               	goto	l121
  1604  07B8                     u410:	
  1605  07B8                     l1274:	
  1606                           
  1607                           ;GPS.c: 65:                                 {;GPS.c: 66:                                
      +                               received_data= UART_receiveByte();
  1608  07B8  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1609  07BD  00F5               	movwf	??_GPS_setLocation
  1610  07BE  0875               	movf	??_GPS_setLocation,w
  1611  07BF  00FA               	movwf	GPS_setLocation@received_data
  1612  07C0                     l1276:	
  1613                           
  1614                           ;GPS.c: 67:                                     if(received_data == ',')
  1615  07C0  302C               	movlw	44
  1616  07C1  067A               	xorwf	GPS_setLocation@received_data,w
  1617  07C2  1D03               	btfss	3,2
  1618  07C3  2FC5               	goto	u421
  1619  07C4  2FC6               	goto	u420
  1620  07C5                     u421:	
  1621  07C5  2FED               	goto	l109
  1622  07C6                     u420:	
  1623  07C6                     l1278:	
  1624                           
  1625                           ;GPS.c: 68:                                     {;GPS.c: 69:                            
      +                                       received_data= UART_receiveByte();
  1626  07C6  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1627  07CB  00F5               	movwf	??_GPS_setLocation
  1628  07CC  0875               	movf	??_GPS_setLocation,w
  1629  07CD  00FA               	movwf	GPS_setLocation@received_data
  1630  07CE                     l1280:	
  1631                           
  1632                           ;GPS.c: 70:                                         for(Uint8 i=0;received_data!=',';i++
      +                          )
  1633  07CE  01F9               	clrf	GPS_setLocation@i_205
  1634  07CF                     l1282:	
  1635  07CF  302C               	movlw	44
  1636  07D0  067A               	xorwf	GPS_setLocation@received_data,w
  1637  07D1  1D03               	btfss	3,2
  1638  07D2  2FD4               	goto	u431
  1639  07D3  2FD5               	goto	u430
  1640  07D4                     u431:	
  1641  07D4  2FD6               	goto	l1286
  1642  07D5                     u430:	
  1643  07D5  2FED               	goto	l121
  1644  07D6                     l1286:	
  1645                           
  1646                           ;GPS.c: 71:                                         {;GPS.c: 72:                        
      +                                               longitude[i]=received_data;
  1647  07D6  087A               	movf	GPS_setLocation@received_data,w
  1648  07D7  00F5               	movwf	??_GPS_setLocation
  1649  07D8  0879               	movf	GPS_setLocation@i_205,w
  1650  07D9  0777               	addwf	GPS_setLocation@longitude,w
  1651  07DA  00F6               	movwf	??_GPS_setLocation+1
  1652  07DB  0876               	movf	??_GPS_setLocation+1,w
  1653  07DC  0084               	movwf	4
  1654  07DD  0875               	movf	??_GPS_setLocation,w
  1655  07DE  1383               	bcf	3,7	;select IRP bank0
  1656  07DF  0080               	movwf	0
  1657  07E0                     l1288:	
  1658                           
  1659                           ;GPS.c: 73:                                             received_data= UART_receiveByte(
      +                          );
  1660  07E0  120A  118A  250F  120A  118A  	fcall	_UART_receiveByte
  1661  07E5  00F5               	movwf	??_GPS_setLocation
  1662  07E6  0875               	movf	??_GPS_setLocation,w
  1663  07E7  00FA               	movwf	GPS_setLocation@received_data
  1664  07E8                     l1290:	
  1665                           
  1666                           ;GPS.c: 74:                                         }
  1667  07E8  3001               	movlw	1
  1668  07E9  00F5               	movwf	??_GPS_setLocation
  1669  07EA  0875               	movf	??_GPS_setLocation,w
  1670  07EB  07F9               	addwf	GPS_setLocation@i_205,f
  1671  07EC  2FCF               	goto	l1282
  1672  07ED                     l109:	
  1673                           ;GPS.c: 82:                    }
  1674                           
  1675  07ED                     l121:	
  1676  07ED  0008               	return
  1677  07EE                     __end_of_GPS_setLocation:	
  1678                           
  1679                           	psect	text6
  1680  050F                     __ptext6:	
  1681 ;; *************** function _UART_receiveByte *****************
  1682 ;; Defined at:
  1683 ;;		line 56 in file "UART.c"
  1684 ;; Parameters:    Size  Location     Type
  1685 ;;		None
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;		None
  1688 ;; Return value:  Size  Location     Type
  1689 ;;                  1    wreg      unsigned char 
  1690 ;; Registers used:
  1691 ;;		wreg, status,2, status,0
  1692 ;; Tracked objects:
  1693 ;;		On entry : 0/0
  1694 ;;		On exit  : 0/0
  1695 ;;		Unchanged: 0/0
  1696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1697 ;;      Params:         0       0       0       0       0
  1698 ;;      Locals:         0       0       0       0       0
  1699 ;;      Temps:          1       0       0       0       0
  1700 ;;      Totals:         1       0       0       0       0
  1701 ;;Total ram usage:        1 bytes
  1702 ;; Hardware stack levels used:    1
  1703 ;; This function calls:
  1704 ;;		Nothing
  1705 ;; This function is called by:
  1706 ;;		_GPS_setLocation
  1707 ;;		_UART_receiveString
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           
  1712                           ;psect for function _UART_receiveByte
  1713  050F                     _UART_receiveByte:	
  1714  050F                     l1156:	
  1715                           ;incstack = 0
  1716                           ; Regs used in _UART_receiveByte: [wreg+status,2+status,0]
  1717                           
  1718  050F                     l1158:	
  1719                           ;UART.c: 58:     while((!((PIR1)&(1<<RCIF))));
  1720                           
  1721  050F  3001               	movlw	1
  1722  0510  00F0               	movwf	??_UART_receiveByte
  1723  0511  3000               	movlw	0
  1724  0512  1283               	bcf	3,5	;RP0=0, select bank0
  1725  0513  1303               	bcf	3,6	;RP1=0, select bank0
  1726  0514  1A8C               	btfsc	12,5	;volatile
  1727  0515  3001               	movlw	1
  1728  0516  3E01               	addlw	1
  1729  0517  2D1A               	goto	u274
  1730  0518                     u275:	
  1731  0518  1003               	clrc
  1732  0519  0DF0               	rlf	??_UART_receiveByte,f
  1733  051A                     u274:	
  1734  051A  3EFF               	addlw	-1
  1735  051B  1D03               	skipz
  1736  051C  2D18               	goto	u275
  1737  051D  0870               	movf	??_UART_receiveByte,w
  1738  051E  050C               	andwf	12,w	;volatile
  1739  051F  1903               	btfsc	3,2
  1740  0520  2D22               	goto	u281
  1741  0521  2D23               	goto	u280
  1742  0522                     u281:	
  1743  0522  2D0F               	goto	l1158
  1744  0523                     u280:	
  1745  0523                     l1160:	
  1746                           
  1747                           ;UART.c: 59:     return RCREG;
  1748  0523  081A               	movf	26,w	;volatile
  1749  0524                     l40:	
  1750  0524  0008               	return
  1751  0525                     __end_of_UART_receiveByte:	
  1752                           
  1753                           	psect	text7
  1754  055D                     __ptext7:	
  1755 ;; *************** function _LCD_init *****************
  1756 ;; Defined at:
  1757 ;;		line 12 in file "LCD.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0, pclath, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0
  1773 ;;      Temps:          1       0       0       0       0
  1774 ;;      Totals:         1       0       0       0       0
  1775 ;;Total ram usage:        1 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    1
  1778 ;; This function calls:
  1779 ;;		_LCD_sendCommand
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;;		_GPS_setLocation
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           
  1786                           
  1787                           ;psect for function _LCD_init
  1788  055D                     _LCD_init:	
  1789  055D                     l1164:	
  1790                           ;incstack = 0
  1791                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
  1792                           
  1793                           
  1794                           ;LCD.c: 14:     ((TRISB)&=(~(1<<0)));
  1795  055D  30FE               	movlw	254
  1796  055E  00F3               	movwf	??_LCD_init
  1797  055F  0873               	movf	??_LCD_init,w
  1798  0560  1683               	bsf	3,5	;RP0=1, select bank1
  1799  0561  1303               	bcf	3,6	;RP1=0, select bank1
  1800  0562  0586               	andwf	6,f	;volatile
  1801                           
  1802                           ;LCD.c: 15:     ((TRISB)&=(~(1<<1)));
  1803  0563  30FD               	movlw	253
  1804  0564  00F3               	movwf	??_LCD_init
  1805  0565  0873               	movf	??_LCD_init,w
  1806  0566  0586               	andwf	6,f	;volatile
  1807                           
  1808                           ;LCD.c: 16:     ((TRISB)&=(~(1<<2)));
  1809  0567  30FB               	movlw	251
  1810  0568  00F3               	movwf	??_LCD_init
  1811  0569  0873               	movf	??_LCD_init,w
  1812  056A  0586               	andwf	6,f	;volatile
  1813                           
  1814                           ;LCD.c: 19:             TRISB&=(~(TRISB &0XF0));
  1815  056B  0806               	movf	6,w	;volatile
  1816  056C  39F0               	andlw	240
  1817  056D  3AFF               	xorlw	255
  1818  056E  00F3               	movwf	??_LCD_init
  1819  056F  0873               	movf	??_LCD_init,w
  1820  0570  0586               	andwf	6,f	;volatile
  1821  0571                     l1166:	
  1822                           
  1823                           ;LCD.c: 23:         LCD_sendCommand(0x02);
  1824  0571  3002               	movlw	2
  1825  0572  120A  118A  268A  120A  118A  	fcall	_LCD_sendCommand
  1826  0577                     l1168:	
  1827                           
  1828                           ;LCD.c: 24:         LCD_sendCommand(0x28);
  1829  0577  3028               	movlw	40
  1830  0578  120A  118A  268A  120A  118A  	fcall	_LCD_sendCommand
  1831  057D                     l1170:	
  1832                           
  1833                           ;LCD.c: 29:     LCD_sendCommand(0x0C);
  1834  057D  300C               	movlw	12
  1835  057E  120A  118A  268A  120A  118A  	fcall	_LCD_sendCommand
  1836  0583                     l1172:	
  1837                           
  1838                           ;LCD.c: 30:     LCD_sendCommand(0x01);
  1839  0583  3001               	movlw	1
  1840  0584  120A  118A  268A  120A  118A  	fcall	_LCD_sendCommand
  1841  0589                     l134:	
  1842  0589  0008               	return
  1843  058A                     __end_of_LCD_init:	
  1844                           
  1845                           	psect	text8
  1846  068A                     __ptext8:	
  1847 ;; *************** function _LCD_sendCommand *****************
  1848 ;; Defined at:
  1849 ;;		line 33 in file "LCD.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  command         1    wreg     unsigned char 
  1852 ;; Auto vars:     Size  Location     Type
  1853 ;;  command         1    2[COMMON] unsigned char 
  1854 ;; Return value:  Size  Location     Type
  1855 ;;                  1    wreg      void 
  1856 ;; Registers used:
  1857 ;;		wreg, status,2, status,0
  1858 ;; Tracked objects:
  1859 ;;		On entry : 0/0
  1860 ;;		On exit  : 0/0
  1861 ;;		Unchanged: 0/0
  1862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1863 ;;      Params:         0       0       0       0       0
  1864 ;;      Locals:         1       0       0       0       0
  1865 ;;      Temps:          2       0       0       0       0
  1866 ;;      Totals:         3       0       0       0       0
  1867 ;;Total ram usage:        3 bytes
  1868 ;; Hardware stack levels used:    1
  1869 ;; This function calls:
  1870 ;;		Nothing
  1871 ;; This function is called by:
  1872 ;;		_LCD_init
  1873 ;;		_LCD_goToRowColum
  1874 ;;		_LCD_clear
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function _LCD_sendCommand
  1880  068A                     _LCD_sendCommand:	
  1881                           
  1882                           ;incstack = 0
  1883                           ; Regs used in _LCD_sendCommand: [wreg+status,2+status,0]
  1884                           ;LCD_sendCommand@command stored from wreg
  1885  068A  00F2               	movwf	LCD_sendCommand@command
  1886  068B                     l1098:	
  1887                           
  1888                           ;LCD.c: 33: void LCD_sendCommand(Uint8 command);LCD.c: 34: {;LCD.c: 35:     ((PORTB)&=(~
      +                          (1<<0)));
  1889  068B  30FE               	movlw	254
  1890  068C  00F0               	movwf	??_LCD_sendCommand
  1891  068D  0870               	movf	??_LCD_sendCommand,w
  1892  068E  1283               	bcf	3,5	;RP0=0, select bank0
  1893  068F  1303               	bcf	3,6	;RP1=0, select bank0
  1894  0690  0586               	andwf	6,f	;volatile
  1895                           
  1896                           ;LCD.c: 36:     ((PORTB)&=(~(1<<1)));
  1897  0691  30FD               	movlw	253
  1898  0692  00F0               	movwf	??_LCD_sendCommand
  1899  0693  0870               	movf	??_LCD_sendCommand,w
  1900  0694  0586               	andwf	6,f	;volatile
  1901  0695                     l1100:	
  1902                           
  1903                           ;LCD.c: 37:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1904  0695  3006               	movlw	6
  1905  0696  00F1               	movwf	??_LCD_sendCommand+1
  1906  0697  3030               	movlw	48
  1907  0698  00F0               	movwf	??_LCD_sendCommand
  1908  0699                     u547:	
  1909  0699  0BF0               	decfsz	??_LCD_sendCommand,f
  1910  069A  2E99               	goto	u547
  1911  069B  0BF1               	decfsz	??_LCD_sendCommand+1,f
  1912  069C  2E99               	goto	u547
  1913  069D  0000               	nop
  1914  069E                     l1102:	
  1915                           
  1916                           ;LCD.c: 38:     ((PORTB)|=(1<<2));
  1917  069E  1283               	bcf	3,5	;RP0=0, select bank0
  1918  069F  1303               	bcf	3,6	;RP1=0, select bank0
  1919  06A0  1506               	bsf	6,2	;volatile
  1920  06A1                     l1104:	
  1921                           
  1922                           ;LCD.c: 39:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1923  06A1  3006               	movlw	6
  1924  06A2  00F1               	movwf	??_LCD_sendCommand+1
  1925  06A3  3030               	movlw	48
  1926  06A4  00F0               	movwf	??_LCD_sendCommand
  1927  06A5                     u557:	
  1928  06A5  0BF0               	decfsz	??_LCD_sendCommand,f
  1929  06A6  2EA5               	goto	u557
  1930  06A7  0BF1               	decfsz	??_LCD_sendCommand+1,f
  1931  06A8  2EA5               	goto	u557
  1932  06A9  0000               	nop
  1933                           
  1934                           ;LCD.c: 42:     PORTB =(PORTB &0X0F)|(command &0XF0);
  1935  06AA  30F0               	movlw	240
  1936  06AB  0572               	andwf	LCD_sendCommand@command,w
  1937  06AC  00F0               	movwf	??_LCD_sendCommand
  1938  06AD  1283               	bcf	3,5	;RP0=0, select bank0
  1939  06AE  1303               	bcf	3,6	;RP1=0, select bank0
  1940  06AF  0806               	movf	6,w	;volatile
  1941  06B0  390F               	andlw	15
  1942  06B1  0470               	iorwf	??_LCD_sendCommand,w
  1943  06B2  0086               	movwf	6	;volatile
  1944  06B3                     l1106:	
  1945                           
  1946                           ;LCD.c: 46:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1947  06B3  3006               	movlw	6
  1948  06B4  00F1               	movwf	??_LCD_sendCommand+1
  1949  06B5  3030               	movlw	48
  1950  06B6  00F0               	movwf	??_LCD_sendCommand
  1951  06B7                     u567:	
  1952  06B7  0BF0               	decfsz	??_LCD_sendCommand,f
  1953  06B8  2EB7               	goto	u567
  1954  06B9  0BF1               	decfsz	??_LCD_sendCommand+1,f
  1955  06BA  2EB7               	goto	u567
  1956  06BB  0000               	nop
  1957  06BC                     l1108:	
  1958                           
  1959                           ;LCD.c: 47:     ((PORTB)&=(~(1<<2)));
  1960  06BC  30FB               	movlw	251
  1961  06BD  00F0               	movwf	??_LCD_sendCommand
  1962  06BE  0870               	movf	??_LCD_sendCommand,w
  1963  06BF  1283               	bcf	3,5	;RP0=0, select bank0
  1964  06C0  1303               	bcf	3,6	;RP1=0, select bank0
  1965  06C1  0586               	andwf	6,f	;volatile
  1966                           
  1967                           ;LCD.c: 48:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1968  06C2  3006               	movlw	6
  1969  06C3  00F1               	movwf	??_LCD_sendCommand+1
  1970  06C4  3030               	movlw	48
  1971  06C5  00F0               	movwf	??_LCD_sendCommand
  1972  06C6                     u577:	
  1973  06C6  0BF0               	decfsz	??_LCD_sendCommand,f
  1974  06C7  2EC6               	goto	u577
  1975  06C8  0BF1               	decfsz	??_LCD_sendCommand+1,f
  1976  06C9  2EC6               	goto	u577
  1977  06CA  0000               	nop
  1978  06CB                     l1110:	
  1979                           
  1980                           ;LCD.c: 49:     ((PORTB)|=(1<<2));
  1981  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  1982  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  1983  06CD  1506               	bsf	6,2	;volatile
  1984                           
  1985                           ;LCD.c: 50:     _delay((unsigned long)((1)*(16000000/4000.0)));
  1986  06CE  3006               	movlw	6
  1987  06CF  00F1               	movwf	??_LCD_sendCommand+1
  1988  06D0  3030               	movlw	48
  1989  06D1  00F0               	movwf	??_LCD_sendCommand
  1990  06D2                     u587:	
  1991  06D2  0BF0               	decfsz	??_LCD_sendCommand,f
  1992  06D3  2ED2               	goto	u587
  1993  06D4  0BF1               	decfsz	??_LCD_sendCommand+1,f
  1994  06D5  2ED2               	goto	u587
  1995  06D6  0000               	nop
  1996  06D7                     l1112:	
  1997                           
  1998                           ;LCD.c: 52:     PORTB =(PORTB &0X0F)|((command &0X0F)<<4);
  1999  06D7  0872               	movf	LCD_sendCommand@command,w
  2000  06D8  390F               	andlw	15
  2001  06D9  00F0               	movwf	??_LCD_sendCommand
  2002  06DA  3004               	movlw	4
  2003  06DB                     u255:	
  2004  06DB  1003               	clrc
  2005  06DC  0DF0               	rlf	??_LCD_sendCommand,f
  2006  06DD  3EFF               	addlw	-1
  2007  06DE  1D03               	skipz
  2008  06DF  2EDB               	goto	u255
  2009  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2010  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  2011  06E2  0806               	movf	6,w	;volatile
  2012  06E3  390F               	andlw	15
  2013  06E4  0470               	iorwf	??_LCD_sendCommand,w
  2014  06E5  0086               	movwf	6	;volatile
  2015  06E6                     l1114:	
  2016                           
  2017                           ;LCD.c: 56:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2018  06E6  3006               	movlw	6
  2019  06E7  00F1               	movwf	??_LCD_sendCommand+1
  2020  06E8  3030               	movlw	48
  2021  06E9  00F0               	movwf	??_LCD_sendCommand
  2022  06EA                     u597:	
  2023  06EA  0BF0               	decfsz	??_LCD_sendCommand,f
  2024  06EB  2EEA               	goto	u597
  2025  06EC  0BF1               	decfsz	??_LCD_sendCommand+1,f
  2026  06ED  2EEA               	goto	u597
  2027  06EE  0000               	nop
  2028                           
  2029                           ;LCD.c: 57:     ((PORTB)&=(~(1<<2)));
  2030  06EF  30FB               	movlw	251
  2031  06F0  00F0               	movwf	??_LCD_sendCommand
  2032  06F1  0870               	movf	??_LCD_sendCommand,w
  2033  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2034  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2035  06F4  0586               	andwf	6,f	;volatile
  2036  06F5                     l1116:	
  2037                           
  2038                           ;LCD.c: 58:     _delay((unsigned long)((1)*(16000000/4000.0)));
  2039  06F5  3006               	movlw	6
  2040  06F6  00F1               	movwf	??_LCD_sendCommand+1
  2041  06F7  3030               	movlw	48
  2042  06F8  00F0               	movwf	??_LCD_sendCommand
  2043  06F9                     u607:	
  2044  06F9  0BF0               	decfsz	??_LCD_sendCommand,f
  2045  06FA  2EF9               	goto	u607
  2046  06FB  0BF1               	decfsz	??_LCD_sendCommand+1,f
  2047  06FC  2EF9               	goto	u607
  2048  06FD  0000               	nop
  2049  06FE                     l137:	
  2050  06FE  0008               	return
  2051  06FF                     __end_of_LCD_sendCommand:	
  2052                           
  2053                           	psect	text9
  2054  04D2                     __ptext9:	
  2055 ;; *************** function _GPS_init *****************
  2056 ;; Defined at:
  2057 ;;		line 11 in file "GPS.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;		None
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;		None
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0, pclath, cstack
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         0       0       0       0       0
  2072 ;;      Locals:         0       0       0       0       0
  2073 ;;      Temps:          0       0       0       0       0
  2074 ;;      Totals:         0       0       0       0       0
  2075 ;;Total ram usage:        0 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		_UART_receiver_init
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function _GPS_init
  2087  04D2                     _GPS_init:	
  2088  04D2                     l1210:	
  2089                           ;incstack = 0
  2090                           ; Regs used in _GPS_init: [wreg+status,2+status,0+pclath+cstack]
  2091                           
  2092                           
  2093                           ;GPS.c: 14:     UART_receiver_init();
  2094  04D2  120A  118A  24D8  120A  118A  	fcall	_UART_receiver_init
  2095  04D7                     l99:	
  2096  04D7  0008               	return
  2097  04D8                     __end_of_GPS_init:	
  2098                           
  2099                           	psect	text10
  2100  04D8                     __ptext10:	
  2101 ;; *************** function _UART_receiver_init *****************
  2102 ;; Defined at:
  2103 ;;		line 35 in file "UART.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;		None
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  1    wreg      void 
  2110 ;; Registers used:
  2111 ;;		wreg
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2117 ;;      Params:         0       0       0       0       0
  2118 ;;      Locals:         0       0       0       0       0
  2119 ;;      Temps:          0       0       0       0       0
  2120 ;;      Totals:         0       0       0       0       0
  2121 ;;Total ram usage:        0 bytes
  2122 ;; Hardware stack levels used:    1
  2123 ;; This function calls:
  2124 ;;		Nothing
  2125 ;; This function is called by:
  2126 ;;		_GPS_init
  2127 ;;		_GSM_init
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           
  2132                           ;psect for function _UART_receiver_init
  2133  04D8                     _UART_receiver_init:	
  2134  04D8                     l1140:	
  2135                           ;incstack = 0
  2136                           ; Regs used in _UART_receiver_init: [wreg]
  2137                           
  2138                           
  2139                           ;UART.c: 37:     TXSTAbits.BRGH=1;
  2140  04D8  1683               	bsf	3,5	;RP0=1, select bank1
  2141  04D9  1303               	bcf	3,6	;RP1=0, select bank1
  2142  04DA  1518               	bsf	24,2	;volatile
  2143  04DB                     l1142:	
  2144                           
  2145                           ;UART.c: 38:     SPBRG = (((16000000 / (9600 * 16UL))) - 1);
  2146  04DB  3067               	movlw	103
  2147  04DC  0099               	movwf	25	;volatile
  2148  04DD                     l1144:	
  2149                           
  2150                           ;UART.c: 39:     TXSTAbits.SYNC=0;
  2151  04DD  1218               	bcf	24,4	;volatile
  2152  04DE                     l1146:	
  2153                           
  2154                           ;UART.c: 40:     RCSTAbits.SPEN=1;
  2155  04DE  1283               	bcf	3,5	;RP0=0, select bank0
  2156  04DF  1303               	bcf	3,6	;RP1=0, select bank0
  2157  04E0  1798               	bsf	24,7	;volatile
  2158  04E1                     l1148:	
  2159                           
  2160                           ;UART.c: 41:     RCSTAbits.RX9 =0;
  2161  04E1  1318               	bcf	24,6	;volatile
  2162  04E2                     l1150:	
  2163                           
  2164                           ;UART.c: 42:     TRISC6=1;
  2165  04E2  1683               	bsf	3,5	;RP0=1, select bank1
  2166  04E3  1303               	bcf	3,6	;RP1=0, select bank1
  2167  04E4  1707               	bsf	7,6	;volatile
  2168  04E5                     l1152:	
  2169                           
  2170                           ;UART.c: 43:     TRISC7=1;
  2171  04E5  1787               	bsf	7,7	;volatile
  2172  04E6                     l1154:	
  2173                           
  2174                           ;UART.c: 49:   RCSTAbits.CREN= 1;
  2175  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  2176  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  2177  04E8  1618               	bsf	24,4	;volatile
  2178  04E9                     l28:	
  2179  04E9  0008               	return
  2180  04EA                     __end_of_UART_receiver_init:	
  2181  007E                     btemp	set	126	;btemp
  2182  007E                     wtemp0	set	126


Data Sizes:
    Strings     22
    Constant    0
    Data        26
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      12
    BANK0            80     30      56
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sp__utoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    displayStringRowColom@data	PTR unsigned char  size(1) Largest target is 13
		 -> main@longitude(BANK0[13]), 

    LCD_displayString@data	PTR unsigned char  size(1) Largest target is 16
		 -> LCD_intergerToString@buffer(BANK0[16]), main@latitude(BANK0[13]), main@longitude(BANK0[13]), 

    GPS_setLocation@longitude	PTR unsigned char  size(1) Largest target is 13
		 -> main@longitude(BANK0[13]), 

    GPS_setLocation@latitude	PTR unsigned char  size(1) Largest target is 13
		 -> main@latitude(BANK0[13]), 


Critical Paths under _main in COMMON

    _main->_displayStringRowColom
    _displayStringRowColom->_LCD_goToRowColum
    _LCD_goToRowColum->_LCD_sendCommand
    _LCD_displayString->_LCD_displayCharacter
    _GPS_setLocation->_LCD_init
    _LCD_init->_LCD_sendCommand

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0    1719
                                              0 BANK0     30    30      0
                           _GPS_init
                    _GPS_setLocation
                  _LCD_displayString
                           _LCD_init
              _displayStringRowColom
 ---------------------------------------------------------------------------------
 (1) _displayStringRowColom                                4     2      2     707
                                              8 COMMON     4     2      2
                  _LCD_displayString
                   _LCD_goToRowColum
 ---------------------------------------------------------------------------------
 (2) _LCD_goToRowColum                                     5     4      1     256
                                              3 COMMON     5     4      1
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (2) _LCD_displayString                                    3     3      0     233
                                              3 COMMON     3     3      0
               _LCD_displayCharacter
 ---------------------------------------------------------------------------------
 (3) _LCD_displayCharacter                                 3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _GPS_setLocation                                      7     6      1     637
                                              4 COMMON     7     6      1
                           _LCD_init
                   _UART_receiveByte
 ---------------------------------------------------------------------------------
 (2) _UART_receiveByte                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0      44
                                              3 COMMON     1     1      0
                    _LCD_sendCommand
 ---------------------------------------------------------------------------------
 (3) _LCD_sendCommand                                      3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _GPS_init                                             0     0      0       0
                 _UART_receiver_init
 ---------------------------------------------------------------------------------
 (2) _UART_receiver_init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPS_init
     _UART_receiver_init
   _GPS_setLocation
     _LCD_init
       _LCD_sendCommand
     _UART_receiveByte
   _LCD_displayString
     _LCD_displayCharacter
   _LCD_init
     _LCD_sendCommand
   _displayStringRowColom
     _LCD_displayString
       _LCD_displayCharacter
     _LCD_goToRowColum
       _LCD_sendCommand

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      38       5       70.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      44      12        0.0%
ABS                  0      0      44       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 21 13:56:14 2020

                             pc 0002                     __CFG_CP$OFF 0000                              l40 0524  
                            l28 04E9                              l71 0614                              l72 0614  
                            l99 04D7                              fsr 0004       __size_of_UART_receiveByte 0016  
                   __CFG_LVP$ON 0000                             l121 07ED                             l140 0689  
                           l109 07ED                             l134 0589                             l137 06FE  
                           l146 055C                             l155 05C0                             l158 04FB  
                           u310 0713                             u311 0712                             u400 0792  
                           u320 0719                             u401 0791                             u321 0718  
                           u410 07B8                             u330 0727                             u411 07B7  
                           u331 0726                             u420 07C6                             u340 0735  
                           u421 07C5                             u341 0734                             u430 07D5  
                           u350 0743                             u255 06DB                             u431 07D4  
                           u351 0742                             u280 0523                             u360 0751  
                           u281 0522                             u361 0750                             u265 0666  
                           u274 051A                             u370 075F                             u290 055C  
                           u450 05D5                    __CFG_CPD$OFF 0000                             u275 0518  
                           u371 075E                             u507 0651                             u291 055B  
                           u380 076D                             u460 05EA                             u381 076C  
                           u517 065D                             u390 077B                             u607 06F9  
                           u391 077A                             u527 0675                             u537 0684  
                           u547 0699                             u557 06A5                             u477 0624  
                           u567 06B7                             u487 0630                             u577 06C6  
                           u497 0642                             u587 06D2                             u597 06EA  
                           fsr0 0004                             indf 0000                 _GPS_setLocation 06FF  
                          l1100 0695                            l1110 06CB                            l1102 069E  
                          l1112 06D7                            l1104 06A1                            l1120 061C  
                          l1210 04D2                            l1114 06E6                            l1106 06B3  
                          l1130 0647                            l1122 0620                            l1140 04D8  
                          l1116 06F5                            l1108 06BC                            l1220 070D  
                          l1212 0700                            l1132 0656                            l1124 0629  
                          l1150 04E2                            l1142 04DB                            l1230 072F  
                          l1222 0713                            l1214 0705                            l1134 0662  
                          l1126 062C                            l1118 0619                            l1310 05E2  
                          l1152 04E5                            l1144 04DD                            l1160 0523  
                          l1240 0751                            l1232 0735                            l1224 0719  
                          l1216 0705                            l1136 0671                            l1128 063E  
                          l1312 05F7                            l1154 04E6                            l1146 04DE  
                          l1170 057D                            l1242 0759                            l1234 073D  
                          l1226 0721                            l1138 0680                            l1314 0601  
                          l1306 05C1                            l1148 04E1                            l1172 0583  
                          l1164 055D                            l1156 050F                            l1252 0775  
                          l1244 075F                            l1236 0743                            l1228 0727  
                          l1180 0551                            l1316 0607                            l1308 05CB  
                          l1166 0571                            l1158 050F                            l1270 07AA  
                          l1262 0793                            l1254 077B                            l1246 0767  
                          l1238 074B                            l1174 0540                            l1190 059D  
                          l1182 058B                            l1168 0577                            l1280 07CE  
                          l1272 07B2                            l1264 079D                            l1256 078B  
                          l1248 076D                            l1176 0542                            l1184 058C  
                          l1098 068B                            l1290 07E8                            l1282 07CF  
                          l1274 07B8                            l1266 07A5                            l1258 078C  
                          l1178 054D                            l1186 0591                            l1194 05A3  
                          l1276 07C0                            l1188 0597                            l1196 05B9  
                          l1286 07D6                            l1278 07C6                            l1294 04EB  
                          l1288 07E0                            l1394 05AB         LCD_goToRowColum@address 0077  
                          STR_1 001C                            STR_2 0009                            STR_3 0013  
                          _RCIF 0065                            _PIR1 000C                            _TRMT 04C1  
                  __CFG_WRT$OFF 0000                            _main 05C1                            btemp 007E  
    __size_of_LCD_displayString 001E        __end_of_LCD_goToRowColum 05C1                   __CFG_BOREN$ON 0000  
                          start 0000         ??_displayStringRowColom 007A                __end_of_LCD_init 058A  
                         ?_main 0070                   __CFG_WDTE$OFF 0000                           _RCREG 001A  
                         _SPBRG 0099                           _PORTB 0006                    main@latitude 0031  
                         _TRISB 0086                __end_of_GPS_init 04D8                           _TXREG 0019  
                         _TXSTA 0098                   __CFG_PWRTE$ON 0000              LCD_displayString@i 0074  
                         pclath 000A                           status 0003                           wtemp0 007E  
               __initialization 07EE                    __end_of_main 0618                          ??_main 0020  
       __end_of_GPS_setLocation 07EE                          _TRISC6 043E                          _TRISC7 043F  
                 main@longitude 0024        __size_of_LCD_sendCommand 0075                _UART_receiveByte 050F  
               __CFG_FOSC$EXTRC 0000         __end_of__initialization 07FC                       ?_LCD_init 0070  
                     ?_GPS_init 0070                  __pcstackCOMMON 0070     __size_of_UART_receiver_init 0012  
                  __pidataBANK0 0525    GPS_setLocation@received_data 007A                ?_GPS_setLocation 0074  
              GPS_setLocation@i 0078        GPS_setLocation@longitude 0077                      ??_LCD_init 0073  
             ?_LCD_goToRowColum 0073                      __pmaintext 05C1                      ??_GPS_init 0070  
            ??_LCD_goToRowColum 0074  __size_of_displayStringRowColom 0012   __end_of_displayStringRowColom 04FC  
 __size_of_LCD_displayCharacter 0072               ??_LCD_sendCommand 0070   LCD_displayCharacter@character 0072  
                    __stringtab 0003          LCD_sendCommand@command 0072                         __ptext1 04EA  
                       __ptext2 058A                         __ptext3 053F                         __ptext4 0618  
                       __ptext5 06FF                         __ptext6 050F                         __ptext7 055D  
                       __ptext8 068A                         __ptext9 04D2             LCD_goToRowColum@col 0073  
           LCD_goToRowColum@row 0076            end_of_initialization 07FC        __end_of_UART_receiveByte 0525  
                     _RCSTAbits 0018                       _TXSTAbits 0098               __size_of_LCD_init 002D  
             __size_of_GPS_init 0006       displayStringRowColom@data 0079             start_initialization 07EE  
    __end_of_UART_receiver_init 04EA                 _LCD_sendCommand 068A                      init_fetch0 04FC  
                   __pdataBANK0 003E       __size_of_LCD_goToRowColum 0037                       ___latbits 0002  
                 __pcstackBANK0 0020    __end_of_LCD_displayCharacter 068A        __size_of_GPS_setLocation 00EF  
       GPS_setLocation@latitude 0074           _displayStringRowColom 04EA                       __pstrings 0003  
       __end_of_LCD_sendCommand 06FF               ?_UART_receiveByte 0070                        _LCD_init 055D  
            ??_UART_receiveByte 0070                        _GPS_init 04D2                       main@F1122 004B  
                     main@F1124 003E                     __stringbase 0008           LCD_displayString@data 0075  
             ??_GPS_setLocation 0075            _LCD_displayCharacter 0618          ?_displayStringRowColom 0078  
            __end_of__stringtab 0009                _LCD_goToRowColum 058A                        __ptext10 04D8  
                 __size_of_main 0057                ?_LCD_sendCommand 0070               _LCD_displayString 053F  
         ?_LCD_displayCharacter 0070              ?_LCD_displayString 0070              _UART_receiver_init 04D8  
           ??_LCD_displayString 0073                        init_ram0 0500             ?_UART_receiver_init 0070  
     __end_of_LCD_displayString 055D                       stringcode 0003            ??_UART_receiver_init 0070  
          GPS_setLocation@i_205 0079                        stringdir 0003                        stringtab 0003  
      displayStringRowColom@col 0078        displayStringRowColom@row 007B          ??_LCD_displayCharacter 0070  
